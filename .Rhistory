velo_base <- rnorm(20, mean = 0, sd = 1)  # Random normal distribution
velo <- rnorm(20, mean = 0, sd = 1)
# Compute Granger test
score <- grangertest(velo_base, velo, order = 3)[2, 4]
random_granger_scores <- c(random_granger_scores, score)
}
# Add the random scenario to the data list
granger_scores_by_folder[["Random"]] <- random_granger_scores
# Convert the list to a data frame for plotting
plot_data <- do.call(rbind, lapply(names(granger_scores_by_folder), function(folder) {
data.frame(folder = folder, score = granger_scores_by_folder[[folder]])
}))
# Create a boxplot with subfolder names as labels
ggplot(plot_data, aes(x = folder, y = score)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(title = "Boxplot of Granger Test Scores by Subfolder", y = "P-Value", x = "Subfolder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
# Create a boxplot with subfolder names as labels
ggplot(plot_data, aes(x = folder, y = score, fill = folder)) +
geom_boxplot(color = "darkblue") +
labs(title = "Boxplot of Granger Test Scores by Subfolder (Including Random Simulation)",
y = "P-Value",
x = "Subfolder") +
scale_fill_manual(values = c(Random = "red", rep("lightblue", length(granger_scores_by_folder) - 1))) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
# Create a boxplot with subfolder names as labels
ggplot(plot_data, aes(x = folder, y = score)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(title = "Boxplot of Granger Test Scores by Subfolder", y = "P-Value", x = "Subfolder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
# Simulate the delayed scenario
set.seed(789)  # For reproducibility
delayed_granger_scores <- c()
for (i in 1:100) {  # Simulate 100 delayed pairs
velo_base <- rnorm(23, mean = 0, sd = 1)  # Generate a longer sequence
noise <- rnorm(20, mean = 0, sd = 0.1)   # Small random noise
velo <- velo_base[4:23] + noise          # Delayed relationship (lag = 3)
velo_base <- velo_base[1:20]             # Trim to match delay
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 3)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
# Remove NaN values
delayed_granger_scores <- delayed_granger_scores[!is.nan(delayed_granger_scores)]
# Add the delayed scenario to the data list
granger_scores_by_folder[["Delayed"]] <- delayed_granger_scores
# Convert the list to a data frame for plotting
plot_data <- do.call(rbind, lapply(names(granger_scores_by_folder), function(folder) {
data.frame(folder = folder, score = granger_scores_by_folder[[folder]])
}))
# Create a boxplot with subfolder names as labels
ggplot(plot_data, aes(x = folder, y = score)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(title = "Boxplot of Granger Test Scores by Subfolder", y = "P-Value", x = "Subfolder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
# Simulate the delayed scenario
set.seed(789)  # For reproducibility
delayed_granger_scores <- c()
for (i in 1:10000) {  # Simulate 100 delayed pairs
velo_base <- rnorm(23, mean = 0, sd = 1)  # Generate a longer sequence
noise <- rnorm(20, mean = 0, sd = 0.1)   # Small random noise
velo <- velo_base[4:23] + noise          # Delayed relationship (lag = 3)
velo_base <- velo_base[1:20]             # Trim to match delay
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 3)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
# Remove NaN values
delayed_granger_scores <- delayed_granger_scores[!is.nan(delayed_granger_scores)]
# Add the delayed scenario to the data list
granger_scores_by_folder[["Delayed"]] <- delayed_granger_scores
delayed_granger_scores <- c()
for (i in 1:10000) {  # Simulate 100 delayed pairs
velo_base <- rnorm(23, mean = 0, sd = 1)  # Generate a longer sequence
# noise <- rnorm(20, mean = 0, sd = 0.1)   # Small random noise
noise <- 0
velo <- velo_base[4:23] + noise          # Delayed relationship (lag = 3)
velo_base <- velo_base[1:20]             # Trim to match delay
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 3)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
# Remove NaN values
delayed_granger_scores <- delayed_granger_scores[!is.nan(delayed_granger_scores)]
# Add the delayed scenario to the data list
granger_scores_by_folder[["Delayed"]] <- delayed_granger_scores
# Convert the list to a data frame for plotting
plot_data <- do.call(rbind, lapply(names(granger_scores_by_folder), function(folder) {
data.frame(folder = folder, score = granger_scores_by_folder[[folder]])
}))
# Create a boxplot with subfolder names as labels
ggplot(plot_data, aes(x = folder, y = score)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(title = "Boxplot of Granger Test Scores by Subfolder", y = "P-Value", x = "Subfolder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
# Simulate the delayed scenario
set.seed(789)  # For reproducibility
delayed_granger_scores <- c()
for (i in 1:10000) {  # Simulate 100 delayed pairs
velo_base <- rnorm(23, mean = 0, sd = 0.1)  # Generate a longer sequence
# noise <- rnorm(20, mean = 0, sd = 0.1)   # Small random noise
noise <- 0
velo <- velo_base[2:21] + noise          # Delayed relationship (lag = 3)
velo_base <- velo_base[1:20]             # Trim to match delay
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 1)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
# Remove NaN values
delayed_granger_scores <- delayed_granger_scores[!is.nan(delayed_granger_scores)]
# Add the delayed scenario to the data list
granger_scores_by_folder[["Delayed"]] <- delayed_granger_scores
# Convert the list to a data frame for plotting
plot_data <- do.call(rbind, lapply(names(granger_scores_by_folder), function(folder) {
data.frame(folder = folder, score = granger_scores_by_folder[[folder]])
}))
# Create a boxplot with subfolder names as labels
ggplot(plot_data, aes(x = folder, y = score)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(title = "Boxplot of Granger Test Scores by Subfolder", y = "P-Value", x = "Subfolder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
# Simulate the delayed scenario
set.seed(789)  # For reproducibility
delayed_granger_scores <- c()
for (i in 1:10000) {  # Simulate 100 delayed pairs
velo_base <- rnorm(23, mean = 0, sd = 0.1)  # Generate a longer sequence
# noise <- rnorm(20, mean = 0, sd = 0.1)   # Small random noise
noise <- 0
velo <- velo_base[2:21] + noise          # Delayed relationship (lag = 3)
velo_base <- velo_base[1:20]             # Trim to match delay
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 3)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
# Remove NaN values
delayed_granger_scores <- delayed_granger_scores[!is.nan(delayed_granger_scores)]
# Add the delayed scenario to the data list
granger_scores_by_folder[["Delayed"]] <- delayed_granger_scores
# Simulate the delayed scenario
set.seed(789)  # For reproducibility
delayed_granger_scores <- c()
for (i in 1:10000) {  # Simulate 100 delayed pairs
velo_base <- rnorm(23, mean = 0, sd = 0.1)  # Generate a longer sequence
# noise <- rnorm(20, mean = 0, sd = 0.1)   # Small random noise
noise <- 0
velo <- velo_base[2:21] + noise          # Delayed relationship (lag = 3)
velo_base <- velo_base[1:20]             # Trim to match delay
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 3)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
for (i in 1:10000) {  # Simulate 100 delayed pairs
velo_base <- rnorm(23, mean = 0, sd = 0.1)  # Generate a longer sequence
# noise <- rnorm(20, mean = 0, sd = 0.1)   # Small random noise
noise <- 0
velo <- velo_base[2:21] + noise          # Delayed relationship (lag = 3)
velo_base <- velo_base[1:20]             # Trim to match delay
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 2)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
delayed_granger_scores <- c()
for (i in 1:10000) {  # Simulate 100 delayed pairs
velo_base <- rnorm(23, mean = 0, sd = 0.1)  # Generate a longer sequence
# noise <- rnorm(20, mean = 0, sd = 0.1)   # Small random noise
noise <- 0
velo <- velo_base[2:21] + noise          # Delayed relationship (lag = 3)
velo_base <- velo_base[1:20]             # Trim to match delay
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 1)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
# Remove NaN values
delayed_granger_scores <- delayed_granger_scores[!is.nan(delayed_granger_scores)]
# Add the delayed scenario to the data list
granger_scores_by_folder[["Delayed"]] <- delayed_granger_scores
# Convert the list to a data frame for plotting
plot_data <- do.call(rbind, lapply(names(granger_scores_by_folder), function(folder) {
data.frame(folder = folder, score = granger_scores_by_folder[[folder]])
}))
# Create a boxplot with subfolder names as labels
ggplot(plot_data, aes(x = folder, y = score)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(title = "Boxplot of Granger Test Scores by Subfolder", y = "P-Value", x = "Subfolder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
# Simulate the delayed scenario
set.seed(789)  # For reproducibility
delayed_granger_scores <- c()
for (i in 1:10000) {  # Simulate 100 delayed pairs
velo_base <- rnorm(23, mean = 0, sd = 1)  # Longer sequence for lag
velo <- 3 * velo_base[4:23]               # Perfect delayed relationship
velo_base <- velo_base[1:20]              # Trim to match delay
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 3)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
# Remove NaN values
delayed_granger_scores <- delayed_granger_scores[!is.nan(delayed_granger_scores)]
# Add the delayed scenario to the data list
granger_scores_by_folder[["Delayed"]] <- delayed_granger_scores
# Convert the list to a data frame for plotting
plot_data <- do.call(rbind, lapply(names(granger_scores_by_folder), function(folder) {
data.frame(folder = folder, score = granger_scores_by_folder[[folder]])
}))
# Create a boxplot with subfolder names as labels
ggplot(plot_data, aes(x = folder, y = score)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(title = "Boxplot of Granger Test Scores by Subfolder", y = "P-Value", x = "Subfolder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
velo_base <- rnorm(23, mean = 0, sd = 1)  # Longer sequence for lag
velo <- 3 * velo_base[4:23]               # Perfect delayed relationship
velo_base <- velo_base[1:20]              # Trim to match delay
velo
velo_base*3
plot(velo)
velo_base <- rnorm(23, mean = 0, sd = 0.01)  # Longer sequence for lag
velo <- 3 * velo_base[4:23]               # Perfect delayed relationship
velo_base <- velo_base[1:20]              # Trim to match delay
plot(velo)
plot(velo_base)
plot(velo, velo_base)
plot(velo)
velo_base <- rnorm(23, mean = 0, sd = 0.01)  # Longer sequence for lag
velo <- 2 + velo_base[4:23]               # Perfect delayed relationship
velo_base <- velo_base[1:20]              # Trim to match delay
plot(velo, velo_base)
plot(velo)
score <- grangertest(velo_base, velo, order = 3)[2, 4]
# Simulate the delayed scenario
set.seed(789)  # For reproducibility
delayed_granger_scores <- c()
for (i in 1:10000) {  # Simulate 100 delayed pairs
velo_base <- rnorm(23, mean = 0, sd = 0.01)  # Longer sequence for lag
velo <- 2 + velo_base[4:23]               # Perfect delayed relationship
velo_base <- velo_base[1:20]              # Trim to match delay
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 3)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
# Remove NaN values
delayed_granger_scores <- delayed_granger_scores[!is.nan(delayed_granger_scores)]
# Add the delayed scenario to the data list
granger_scores_by_folder[["Delayed"]] <- delayed_granger_scores
# Convert the list to a data frame for plotting
plot_data <- do.call(rbind, lapply(names(granger_scores_by_folder), function(folder) {
data.frame(folder = folder, score = granger_scores_by_folder[[folder]])
}))
# Create a boxplot with subfolder names as labels
ggplot(plot_data, aes(x = folder, y = score)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(title = "Boxplot of Granger Test Scores by Subfolder", y = "P-Value", x = "Subfolder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
# Simulate the delayed scenario
set.seed(789)  # For reproducibility
delayed_granger_scores <- c()
for (i in 1:10000) {  # Simulate 100 delayed pairs
velo_base <- rnorm(20, mean = 0, sd = 0.1)  # Small variance
velo <- 3 * velo_base[1:19]                # Perfect delayed relationship with lag 1
velo_base <- velo_base[2:20]               # Trim to match delay
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 1)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
# Remove NaN values
delayed_granger_scores <- delayed_granger_scores[!is.nan(delayed_granger_scores)]
# Add the delayed scenario to the data list
granger_scores_by_folder[["Delayed"]] <- delayed_granger_scores
# Convert the list to a data frame for plotting
plot_data <- do.call(rbind, lapply(names(granger_scores_by_folder), function(folder) {
data.frame(folder = folder, score = granger_scores_by_folder[[folder]])
}))
# Create a boxplot with subfolder names as labels
ggplot(plot_data, aes(x = folder, y = score)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(title = "Boxplot of Granger Test Scores by Subfolder", y = "P-Value", x = "Subfolder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
delayed_granger_scores <- c()
for (i in 1:10000) {  # Simulate 100 delayed pairs
velo_base <- rnorm(20, mean = 0, sd = 0.5)  # Small variance
velo <- 3 * velo_base[1:19]                # Perfect delayed relationship with lag 1
velo_base <- velo_base[2:20]               # Trim to match delay
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 1)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
delayed_granger_scores <- c()
for (i in 1:10000) {  # Simulate 100 delayed pairs
velo_base <- rnorm(20, mean = 0, sd = 0.5)  # Small variance
noise <- rnorm(19, mean = 0, sd = 0.01)    # Very small noise
velo <- 3 * velo_base[1:19] + noise        # Perfect delayed relationship with lag 1
velo_base <- velo_base[2:20]               # Trim to match delay
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 1)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
# Remove NaN values
delayed_granger_scores <- delayed_granger_scores[!is.nan(delayed_granger_scores)]
# Add the delayed scenario to the data list
granger_scores_by_folder[["Delayed"]] <- delayed_granger_scores
# Convert the list to a data frame for plotting
plot_data <- do.call(rbind, lapply(names(granger_scores_by_folder), function(folder) {
data.frame(folder = folder, score = granger_scores_by_folder[[folder]])
}))
# Create a boxplot with subfolder names as labels
ggplot(plot_data, aes(x = folder, y = score)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(title = "Boxplot of Granger Test Scores by Subfolder", y = "P-Value", x = "Subfolder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
# Simulate the delayed scenario
set.seed(789)  # For reproducibility
delayed_granger_scores <- c()
for (i in 1:10000) {  # Simulate 100 delayed pairs
velo_base <- rnorm(20, mean = 0, sd = 1)  # Larger variance (sd = 1)
# Add noise to the delayed relationship for velo (lag 3)
noise <- rnorm(17, mean = 0, sd = 0.5)  # Larger noise (sd = 0.5)
velo <- 3 * velo_base[1:17] + noise      # Delayed relationship with lag 3 + noise
velo_base <- velo_base[4:20]             # Trim to match delay (lag 3)
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 3)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
# Remove NaN values
delayed_granger_scores <- delayed_granger_scores[!is.nan(delayed_granger_scores)]
# Add the delayed scenario to the data list
granger_scores_by_folder[["Delayed"]] <- delayed_granger_scores
# Convert the list to a data frame for plotting
plot_data <- do.call(rbind, lapply(names(granger_scores_by_folder), function(folder) {
data.frame(folder = folder, score = granger_scores_by_folder[[folder]])
}))
# Create a boxplot with subfolder names as labels
ggplot(plot_data, aes(x = folder, y = score)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(title = "Boxplot of Granger Test Scores by Subfolder", y = "P-Value", x = "Subfolder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
delayed_granger_scores <- c()
for (i in 1:10000) {  # Simulate 100 delayed pairs
velo_base <- rnorm(24, mean = 0, sd = 1)  # Larger variance (sd = 1)
# Add noise to the delayed relationship for velo (lag 3)
noise <- rnorm(20, mean = 0, sd = 1)  # Larger noise (sd = 0.5)
velo <- 2 * velo_base[1:20] + noise      # Delayed relationship with lag 3 + noise
velo_base <- velo_base[4:24]             # Trim to match delay (lag 3)
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 3)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
# Remove NaN values
delayed_granger_scores <- delayed_granger_scores[!is.nan(delayed_granger_scores)]
# Add the delayed scenario to the data list
granger_scores_by_folder[["Delayed"]] <- delayed_granger_scores
# Convert the list to a data frame for plotting
plot_data <- do.call(rbind, lapply(names(granger_scores_by_folder), function(folder) {
data.frame(folder = folder, score = granger_scores_by_folder[[folder]])
}))
# Create a boxplot with subfolder names as labels
ggplot(plot_data, aes(x = folder, y = score)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(title = "Boxplot of Granger Test Scores by Subfolder", y = "P-Value", x = "Subfolder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
# Simulate the delayed scenario
set.seed(789)  # For reproducibility
delayed_granger_scores <- c()
for (i in 1:10000) {  # Simulate 100 delayed pairs
velo_base <- rnorm(20, mean = 0, sd = 1)  # Larger variance (sd = 1)
# Introduce some non-linearity and noise
noise <- rnorm(20, mean = 0, sd = 0.5)   # Noise with large variance
velo_base_disturbed <- velo_base + noise  # Disturbed version of velo_base
# Non-linear relationship (sine-based) with delayed version of velo_base
velo <- sin(velo_base_disturbed[1:17]) * 3 + rnorm(17, mean = 0, sd = 0.5)  # Add noise to make the delay less significant
velo_base <- velo_base[4:20]             # Trim to match delay (lag 3)
# Randomly shift some values in velo and velo_base
shift_indices <- sample(1:20, 5)  # Randomly choose indices to shift
velo_base[shift_indices] <- velo_base[shift_indices] + rnorm(5, mean = 0, sd = 0.2)
velo[shift_indices] <- velo[shift_indices] + rnorm(5, mean = 0, sd = 0.2)
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 3)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
velo_base <- rnorm(20, mean = 0, sd = 1)  # Larger variance (sd = 1)
# Introduce some non-linearity and noise
noise <- rnorm(20, mean = 0, sd = 0.5)   # Noise with large variance
velo_base_disturbed <- velo_base + noise  # Disturbed version of velo_base
# Non-linear relationship (sine-based) with delayed version of velo_base
velo <- sin(velo_base_disturbed[1:17]) * 3 + rnorm(17, mean = 0, sd = 0.5)  # Add noise to make the delay less significant
velo_base <- velo_base[4:20]             # Trim to match delay (lag 3)
# Randomly shift some values in velo and velo_base
shift_indices <- sample(1:20, 5)  # Randomly choose indices to shift
velo_base[shift_indices] <- velo_base[shift_indices] + rnorm(5, mean = 0, sd = 0.2)
velo[shift_indices] <- velo[shift_indices] + rnorm(5, mean = 0, sd = 0.2)
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 3)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
var(velo_base) > 1e-6 && var(velo) > 1e-6
var(velo)
velo
# Generate velo_base with larger variance
velo_base <- rnorm(20, mean = 0, sd = 1)  # Larger variance (sd = 1)
# Add noise to velo_base
noise <- rnorm(20, mean = 0, sd = 0.5)   # Noise with larger variance
velo_base_disturbed <- velo_base + noise  # Disturbed version of velo_base
# Create velo with a lag of 3 and noise
velo <- 3 * velo_base_disturbed[1:17] + rnorm(17, mean = 0, sd = 0.5)  # Linear delayed relationship with noise
velo_base <- velo_base[4:20]             # Trim to match delay (lag 3)
# Randomly shift some values in velo and velo_base
shift_indices <- sample(1:20, 5)  # Randomly choose indices to shift
velo_base[shift_indices] <- velo_base[shift_indices] + rnorm(5, mean = 0, sd = 0.2)
velo[shift_indices] <- velo[shift_indices] + rnorm(5, mean = 0, sd = 0.2)
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 3)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
velo
# Generate velo_base with larger variance
velo_base <- rnorm(20, mean = 0, sd = 1)  # Larger variance (sd = 1)
# Add noise to velo_base
noise <- rnorm(20, mean = 0, sd = 0.5)   # Noise with larger variance
velo_base_disturbed <- velo_base + noise  # Disturbed version of velo_base
# Create velo with a lag of 3 and noise
velo <- 3 * velo_base_disturbed[1:17] + rnorm(17, mean = 0, sd = 0.5)  # Linear delayed relationship with noise
velo_base <- velo_base[4:20]             # Trim to match delay (lag 3)
# Randomly shift some values in velo and velo_base
shift_indices <- sample(1:17, 5)  # Randomly choose indices to shift
velo_base[shift_indices] <- velo_base[shift_indices] + rnorm(5, mean = 0, sd = 0.2)
velo[shift_indices] <- velo[shift_indices] + rnorm(5, mean = 0, sd = 0.2)
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 3)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
# Simulate the delayed scenario
set.seed(789)  # For reproducibility
delayed_granger_scores <- c()
for (i in 1:10000) {  # Simulate 100 delayed pairs
# Generate velo_base with larger variance
velo_base <- rnorm(20, mean = 0, sd = 1)  # Larger variance (sd = 1)
# Add noise to velo_base
noise <- rnorm(20, mean = 0, sd = 0.5)   # Noise with larger variance
velo_base_disturbed <- velo_base + noise  # Disturbed version of velo_base
# Create velo with a lag of 3 and noise
velo <- 3 * velo_base_disturbed[1:17] + rnorm(17, mean = 0, sd = 0.5)  # Linear delayed relationship with noise
velo_base <- velo_base[4:20]             # Trim to match delay (lag 3)
# Randomly shift some values in velo and velo_base
shift_indices <- sample(1:17, 5)  # Randomly choose indices to shift
velo_base[shift_indices] <- velo_base[shift_indices] + rnorm(5, mean = 0, sd = 0.2)
velo[shift_indices] <- velo[shift_indices] + rnorm(5, mean = 0, sd = 0.2)
# Check for sufficient variance
if (var(velo_base) > 1e-6 && var(velo) > 1e-6) {
score <- grangertest(velo_base, velo, order = 3)[2, 4]
delayed_granger_scores <- c(delayed_granger_scores, score)
}
}
# Remove NaN values
delayed_granger_scores <- delayed_granger_scores[!is.nan(delayed_granger_scores)]
# Add the delayed scenario to the data list
granger_scores_by_folder[["Delayed"]] <- delayed_granger_scores
# Convert the list to a data frame for plotting
plot_data <- do.call(rbind, lapply(names(granger_scores_by_folder), function(folder) {
data.frame(folder = folder, score = granger_scores_by_folder[[folder]])
}))
# Create a boxplot with subfolder names as labels
ggplot(plot_data, aes(x = folder, y = score)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(title = "Boxplot of Granger Test Scores by Subfolder", y = "P-Value", x = "Subfolder") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
